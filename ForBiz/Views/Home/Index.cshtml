@using ForBiz.Models.Instagram;
@using Newtonsoft.Json;

@{
    ViewBag.Title = "Index";
}

@model List<InstagramVm>

@*<div class="mdl-cell mdl-cell--6-col mdl-cell--8-col-tablet">
        <i class="material-icons">
        bookmark
    </i>6 (8 tablet)</div>
    <div class="mdl-cell mdl-cell--4-col mdl-cell--6-col-tablet">4 (6 tablet)</div>
    <div class="mdl-cell mdl-cell--2-col mdl-cell--4-col-phone">2 (4 phone)</div>*@

@*<div class="mdl-cell mdl-cell--2-col mdl-cell--hide-tablet mdl-cell--hide-phone"></div>*@


<div id="Instagram">
    <dialog class="mdl-dialog" id="UpdatePersonDialog">
        <h5 class="mdl-dialog__title">Изменить</h5>
        <div class="mdl-dialog__content">
            <form action="#">
                <div class="mdc-layout-grid">
                    <div class="mdc-layout-grid__inner">

                        <div class="mdc-layout-grid__cell mdc-layout-grid__cell--span-12">
                            <div class="mdc-text-field" data-mdc-auto-init="MDCTextField">
                                <input type="text" id="UpdatePersonFIO" class="mdc-text-field__input">
                                <label class="mdc-floating-label mdc-floating-label--float-above" for="my-text-field">ФИО</label>
                                <div class="mdc-line-ripple"></div>
                            </div>
                        </div>

                        <div class="mdc-layout-grid__cell mdc-layout-grid__cell--span-12">
                            <div class="mdc-text-field" data-mdc-auto-init="MDCTextField">
                                <input type="text" id="UpdatePersonURL" class="mdc-text-field__input">
                                <label class="mdc-floating-label mdc-floating-label--float-above" for="my-text-field">URL</label>
                                <div class="mdc-line-ripple"></div>
                            </div>
                        </div>

                        <div class="mdc-layout-grid__cell mdc-layout-grid__cell--span-12">
                            <div data-mdc-auto-init="MDCSelect" class="mdc-select" style="min-width:76%">
                                <i class="mdc-select__dropdown-icon"></i>
                                <select class="mdc-select__native-control" id="UpdatePersonEndPoint">
                                    <option value="" disabled></option>
                                    <option value="1">Instagram</option>
                                    <option value="2">VK</option>
                                    <option value="3" selected>Email</option>
                                </select>
                                <label class="mdc-floating-label mdc-floating-label--float-above">EndPoint</label>
                                <div class="mdc-line-ripple"></div>
                            </div>
                        </div>
                    </div>
                </div>
            </form>
        </div>
        <div class="mdl-dialog__actions">
            <button type="button" class="mdl-button remove" v-on:click="UpdatePersonDialog(true)">Сохранить</button>
            <button type="button" class="mdl-button close" v-on:click="UpdatePersonDialog(false)">Отмена</button>
        </div>
    </dialog>

    <dialog class="mdl-dialog" id="RemovePersonDialog">
        <h5 class="mdl-dialog__title">Удалить человека</h5>
        <div class="mdl-dialog__content">
            <p id="PersonNameDialog"></p>
        </div>
        <div class="mdl-dialog__actions">
            <button type="button" class="mdl-button remove" v-on:click="RemovePersonDialog(true)">Да</button>
            <button type="button" class="mdl-button close" v-on:click="RemovePersonDialog(false)">Нет</button>
        </div>
    </dialog>

    <div class="mdl-grid" style="justify-content:center">
        <div class="" id="app">
            <div class="mdl-shadow--6dp" style="padding:10px">
                <h5>Добавить человека</h5>
                @*<form action="#">*@
                <div class="mdl-textfield mdl-js-textfield mdl-textfield--floating-label">
                    <label class="mdl-textfield__label" for="sample1">ФИО</label>
                    <input class="mdl-textfield__input" type="text" id="_FIO" v-model="fio">
                </div>
                <div class="mdl-textfield mdl-js-textfield mdl-textfield--floating-label">
                    <label class="mdl-textfield__label" for="sample1">URL</label>
                    <input class="mdl-textfield__input" type="text" id="_URL" v-model="url">
                </div>
                <div class="mdl-textfield mdl-js-textfield mdl-textfield--floating-label">
                    <label class="mdl-textfield__label" for="octane">EndPoint</label>
                    <select class="mdl-textfield__input" id="_EndPoint" name="octane" v-model="endPoint">
                        <option disabled value=""></option>
                        <option value="1">Instagram</option>
                        <option value="2">VK</option>
                        <option value="3">Email</option>
                    </select>
                </div>
                <button class="mdl-button mdl-js-button mdl-button--fab mdl-button--mini-fab mdl-button--colored" v-on:click="addPerson()">
                    <i class="material-icons">add</i>
                </button>
                @*</form>*@
            </div>
        </div>
    </div>

    <div class="mdl-grid" style="justify-content:center">
        <div class="">
            <table class="mdl-data-table mdl-js-data-table mdl-shadow--2dp mdl-cell mdl-cell--12-col">
                <thead>
                    <tr>
                        <th class="mdl-data-table__cell--non-numeric">ФИО</th>
                        <th>URL</th>
                        <th>EndPoint</th>
                        <th>TimeStamp</th>
                        <th>options</th>
                    </tr>
                </thead>
                <tbody>
                    <tr v-for="item in Persons">
                        <td class="mdl-data-table__cell--non-numeric">{{item.FIO}}</td>
                        <td>{{item.URL}}</td>
                        <td>{{item.EndPoint | endPointFilter}}</td>
                        <td>{{item.TimeStamp | formatDate}}</td>
                        <td>
                            <div class="button-option-person">
                                <button class="mdc-button js--dropdown-toggle">Меню</button>
                                <div class="mdc-menu-surface--anchor">
                                    <div data-mdc-auto-init="MDCMenu" class="mdc-menu mdc-menu-surface" tabindex="-1" style="transform-origin: center bottom 0px; left: 0px; bottom: 0px; max-height: 806.188px;">
                                        <ul class="mdc-list" role="menu" aria-hidden="true">
                                            <li class="mdc-list-item mdc-ripple-upgraded" role="menuitem" tabindex="-1" v-on:click="RemovePerson(item)">Удалить</li>
                                            <li class="mdc-list-divider" role="separator"></li>
                                            <li class="mdc-list-item mdc-ripple-upgraded" role="menuitem" tabindex="-1" v-on:click="UpdatePerson(item)">Изменить</li>
                                        </ul>
                                    </div>
                                </div>
                            </div>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
</div>

<script>
    //Vue.http.options.emulateJSON = true;

    var instagram = new Vue({
            el: '#Instagram',
        data: function () {
            return {
                Persons: [],
                fio: '',
                url: '',
                endPoint:''
            }
        },
        methods: {
            addPerson: function (fio, url, endpoint) {
                //instagram.Lists.unshift({ FIO: this.fio, URL: this.url, EndPoint: endPointFilter(this.endPoint), TimeStamp: new Date() });
                //InitEventOtionsTable();

                //this.ajaxRequest = false;
                this.$http.post('/Home/AddPerson',
                    { FIO: this.fio, URL: this.url, EndPoint: this.endPoint, TimeStamp: new Date().toISOString() })
                    .then(response => {

                        //// get status
                        //alert(response.status);

                        //// get status text
                        //alert(response.statusText);

                        //// get 'Expires' header
                        //alert(response.headers.get('Expires'));

                        //// get body data
                        //alert(response.body);

                        location.reload();

                    }, response => {
                        alert('error');

                        // error callback
                    });
            },
            info: function (value) {
                alert(value);
            },
            RemovePerson: function (value) {

                document.getElementById('PersonNameDialog').innerHTML = 'Уверены ли вы ? Что хотите удалить </br> ' + value.FIO;
                Dialog('RemovePersonDialog', true);

            },
            RemovePersonDialog: function (value) {

                if (value) {
                    alert('удалили');
                }

                Dialog('RemovePersonDialog', false);
            },
            UpdatePerson: function (value) {
                //value.FIO = '';
                document.getElementById('UpdatePersonFIO').value = value.FIO;
                document.getElementById('UpdatePersonURL').value = value.URL;
                document.getElementById('UpdatePersonEndPoint').value = value.EndPoint;
                Dialog('UpdatePersonDialog', true);
            }
            ,
            UpdatePersonDialog: function (value) {

                if (value) {
                    alert('Обновили');
                }

                Dialog('UpdatePersonDialog', false);
            }
        }
    })

    Vue.filter('formatDate', function (value) {
        if (value) {
            //moment.lang('ru');
            return moment(value).format('DD-MM-YYYY HH:mm:ss');
            //var d = new Date(Date.parse(value));
            //return (d.getFullYear() + "-" + (d.getMonth() + 1) + "-" + d.getDate() +' '+ d.getHours() + ':' + d.getMinutes());
        }
    });

    Vue.filter('endPointFilter', function(value) {
        if (value) {
            switch (value) {
                case 1:
                    return 'Instagram';
                case 2:
                    return 'VK';
                case 3:
                    return 'Email';
                default:
                    return value;
            }
        }
    });


    function Dialog(name, value) {
        var dialog = document.getElementById(name);

        if (value) dialog.showModal();
            else dialog.close();

    }

    instagram.Persons = @(Html.Raw(JsonConvert.SerializeObject(Model)))
</script>

